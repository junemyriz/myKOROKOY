<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Griffin Coin - Next-Gen Meme Ecosystem</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js"></script>
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <style>
        @keyframes flame {
            0% { background-position: 0% 50% }
            50% { background-position: 100% 50% }
            100% { background-position: 0% 50% }
        }
        .flame-bg {
            background: linear-gradient(270deg, #ff6b00, #ff0000, #ff8800);
            background-size: 600% 600%;
            animation: flame 8s ease infinite;
        }
        .sky-movement {
            animation: sky 20s linear infinite;
        }
        @keyframes sky {
            0% { background-position: 0% 0% }
            100% { background-position: 100% 100% }
        }
    </style>
</head>
<body class="bg-gradient-to-b from-purple-900 via-blue-900 to-indigo-900 min-h-screen">
    <!-- Web3 Connection Banner -->
    <div id="walletBanner" class="fixed top-4 right-4 bg-white/10 backdrop-blur-sm p-4 rounded-xl shadow-xl hidden">
        <span id="walletAddress" class="font-mono"></span>
        <button onclick="disconnectWallet()" class="ml-4 text-red-400 hover:text-red-300">Disconnect</button>
    </div>

    <!-- Dynamic Presale Dashboard -->
    <div class="container mx-auto px-4 py-16">
        <div class="max-w-4xl mx-auto bg-black/20 rounded-3xl p-8 shadow-2xl">
            <div class="grid md:grid-cols-2 gap-8 items-center">
                <div data-aos="zoom-in">
                    <img src="animated-griffin.gif" class="w-full hover:scale-105 transition-transform">
                </div>
                
                <!-- Live Presale Data -->
                <div class="space-y-6">
                    <h1 class="text-4xl font-bold bg-gradient-to-r from-yellow-400 to-orange-500 bg-clip-text text-transparent">
                        $GRIFFIN Presale
                    </h1>
                    
                    <div class="space-y-4">
                        <div class="flex justify-between">
                            <span>Price:</span>
                            <span class="font-bold">1 ETH = 50,000 GRIFFIN</span>
                        </div>
                        <div class="h-2 bg-gray-800 rounded-full">
                            <div id="progressBar" class="h-2 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-full transition-all duration-500" style="width: 65%"></div>
                        </div>
                        <div class="flex justify-between text-sm">
                            <span>Raised: <span id="raisedEth">420</span> ETH</span>
                            <span>Hard Cap: 1000 ETH</span>
                        </div>
                    </div>

                    <!-- Purchase Interface -->
                    <div class="space-y-4">
                        <input type="number" id="ethAmount" 
                               class="w-full bg-white/5 rounded-lg p-4 text-center"
                               placeholder="Enter ETH amount">
                        <button onclick="purchaseTokens()" 
                                class="w-full flame-bg py-4 rounded-lg font-bold hover:scale-[1.02] transition-transform">
                            BUY NOW
                        </button>
                        <div class="text-center text-sm opacity-75">
                            Estimated GRIFFIN: <span id="estimatedTokens">0</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Features Grid -->
    <section class="container mx-auto px-4 py-16">
        <div class="grid md:grid-cols-3 gap-8">
            <div class="bg-gradient-to-br from-purple-800/30 to-blue-800/30 p-6 rounded-xl border border-white/10 hover:border-cyan-400 transition-all">
                <h3 class="text-xl font-bold mb-4">üõ°Ô∏è Audit & Security</h3>
                <ul class="list-disc pl-5 opacity-90">
                    <li>CertiK Audited</li>
                    <li>Liquidity Locked</li>
                    <li>Anti-Bot Protection</li>
                </ul>
            </div>
            
            <div class="bg-gradient-to-br from-blue-800/30 to-green-800/30 p-6 rounded-xl border border-white/10 hover:border-green-400 transition-all">
                <h3 class="text-xl font-bold mb-4">üöÄ Growth Engine</h3>
                <ul class="list-disc pl-5 opacity-90">
                    <li>Auto-Buyback System</li>
                    <li>3D NFT Collection</li>
                    <li>Staking Rewards</li>
                </ul>
            </div>
            
            <div class="bg-gradient-to-br from-green-800/30 to-yellow-800/30 p-6 rounded-xl border border-white/10 hover:border-yellow-400 transition-all">
                <h3 class="text-xl font-bold mb-4">ü§ù Community Power</h3>
                <ul class="list-disc pl-5 opacity-90">
                    <li>DAO Governance</li>
                    <li>Referral Program</li>
                    <li>Community Treasury</li>
                </ul>
            </div>
        </div>
    </section>

    <!-- Interactive Roadmap -->
    <section class="container mx-auto px-4 py-16">
        <h2 class="text-3xl font-bold text-center mb-12">Flight Path</h2>
        <div class="relative h-2 bg-white/10 mx-8">
            <div class="absolute h-2 bg-gradient-to-r from-green-400 to-blue-500" style="width: 33%"></div>
        </div>
        <div class="grid md:grid-cols-3 gap-8 mt-8">
            <div class="roadmap-card" data-phase="1">
                <h3>Phase 1: Takeoff</h3>
                <ul>
                    <li>Presale Launch</li>
                    <li>10,000 Holders</li>
                    <li>CEX Listings</li>
                </ul>
            </div>
            <!-- Add more roadmap phases -->
        </div>
    </section>

    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script>
        AOS.init();
        let ethRaised = 420;
        const pricePerEth = 50000;

        // Web3 Integration
        async function connectWallet() {
            if (window.ethereum) {
                try {
                    const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
                    const walletAddress = accounts[0];
                    document.getElementById('walletBanner').classList.remove('hidden');
                    document.getElementById('walletAddress').textContent = 
                        `${walletAddress.slice(0,6)}...${walletAddress.slice(-4)}`;
                } catch (error) {
                    console.error(error);
                }
            }
        }

        async function purchaseTokens() {
            const ethAmount = parseFloat(document.getElementById('ethAmount').value);
            // Add actual blockchain interaction here
            ethRaised += ethAmount;
            updateDashboard();
        }

        function updateDashboard() {
            document.getElementById('raisedEth').textContent = ethRaised.toFixed(2);
            document.getElementById('progressBar').style.width = 
                `${(ethRaised / 1000) * 100}%`;
            document.getElementById('estimatedTokens').textContent = 
                (document.getElementById('ethAmount').value * pricePerEth).toLocaleString();
        }

        // Live price updates
        setInterval(async () => {
            try {
                const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd');
                const data = await response.json();
                document.getElementById('ethPrice').textContent = 
                    `$${data.ethereum.usd.toLocaleString()}`;
            } catch (error) {
                console.error('Price update failed:', error);
            }
        }, 30000);

        document.getElementById('ethAmount').addEventListener('input', updateDashboard);
        window.onload = connectWallet;
    </script>
</body>
</html>
